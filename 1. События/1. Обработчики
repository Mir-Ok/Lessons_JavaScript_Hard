Событие - сообщение браузера о том, что что-то произошло. Не только ввод и клик, но и конец анимации,
завершение прогрузки стилей и пр.

Реакция на событие - активирует обработчик, который в свою очередь вызывает определенную функцию.
Для создания обработчика надо:
- идентифицировать событие
- иметь доступ к объекту, порождающему событие
- прописать вызываемую им функцию

Есть не только у объекта. Примеры:

// у объекта слушаем клики и если да, то запускаем стрелочную функцию
document.querySelector('button').addEventListener('click', () => {});

// у окна обработчик изменения размера окна
window.addEventListener('resize', () => {});

// у самого общего документа
document.addEventListener('DOMContentLoader', () => {});

-------------------------------------------------------------
Метод .addEventListener является самым правильным способом обрабатывать события, 
но есть еще два с ограничениями:

1. Прямо в код привязав к элементу, ограничение - всего один на элемент
  <button onclick="console.log('Вы нажали на меня')"> Кнопка </button>
  Так же нельзя так добавить обработчик на окно или весь документ.
  Можно добавить функцию в глобальной (не в блоек) ОВ и обращаться обработчиком к ней
  
2. Сначала через JS выбираем элемент, а потом как в примере выше прямо на него
   вешаем обработку. Так уже доступны и окно, и весь документ, но все еще только одно
   событие на один элемент/ и все еще нет DOMContentLoader
   const btn = document.querySelector('button');
   btn.onclick = () => {
   console.log('Вы нажали на кнопку');
   };
   window.onscroll = () => {
   console.log('Вы прокрутили браузер');
   };
   
   
-----------------------------------------------------------------
Удаление обработчка

Например, при зажатой ЛК мыши элемент тащится, а при отпускании перестает 
реагировать на мышь drug-and-drop

<div id="drug-me" style="position:absolute;top:0;left:0;padding:10px;background:grey;text-align:center">
    Перетащи меня
</div>

<script>
    // создадим и сразу вызовем анонимную стрелочную функцию
    (() => {
        // выберем элемент
        const drugDiv = document.getElementById('drug-me');
        // объявим переменные
        let x, y, left, top;
        // определим функцию-перемещатель
        function onMove(event) {
            event.preventDefault();
            drugDiv.style.left = event.clientX - x + left
            drugDiv.style.top = event.clientY - y + top;
        }
        // слушаем нажатие с удержанием на кнопку
        drugDiv.addEventListener('mousedown', event => {
            // наполняем переменные
            x = event.clientX;
            y = event.clientY
            left = parseInt(drugDiv.style.left)
            top = parseInt(drugDiv.style.top)
            // добавляем обработчик движения
            window.addEventListener('mousemove', onMove);
        });
        // слушаем отждатие кнопки мыши
        document.addEventListener('mouseup', () => {
            // и в этот момент удаляем обработчик нажатия
            window.removeEventListener('mousemove', onMove);
        });
    })();
</script>

ВАЖНО! 

.addEventListener и .removeEventListener должны получать одну и ту же функцию
  
