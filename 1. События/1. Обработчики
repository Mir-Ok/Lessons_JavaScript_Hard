Событие - сообщение браузера о том, что что-то произошло. Не только ввод и клик, но и конец анимации,
завершение прогрузки стилей и пр.

Реакция на событие - активирует обработчик, который в свою очередь вызывает определенную функцию.
Для создания обработчика надо:
- идентифицировать событие
- иметь доступ к объекту, порождающему событие
- прописать вызываемую им функцию

Есть не только у объекта. Примеры:

// у объекта слушаем клики и если да, то запускаем стрелочную функцию
document.querySelector('button').addEventListener('click', () => {});

// у окна обработчик изменения размера окна
window.addEventListener('resize', () => {});

// у самого общего документа
document.addEventListener('DOMContentLoader', () => {});

-------------------------------------------------------------
Метод .addEventListener является самым правильным способом обрабатывать события, 
но есть еще два с ограничениями:

1. Прямо в код привязав к элементу, ограничение - всего один на элемент
  <button onclick="console.log('Вы нажали на меня')"> Кнопка </button>
  Так же нельзя так добавить обработчик на окно или весь документ.
  Можно добавить функцию в глобальной (не в блоек) ОВ и обращаться обработчиком к ней
  
2. Сначала через JS выбираем элемент, а потом как в примере выше прямо на него
   вешаем обработку. Так уже доступны и окно, и весь документ, но все еще только одно
   событие на один элемент/ и все еще нет DOMContentLoader
   const btn = document.querySelector('button');
   btn.onclick = () => {
   console.log('Вы нажали на кнопку');
   };
   window.onscroll = () => {
   console.log('Вы прокрутили браузер');
   };
   
   
-----------------------------------------------------------------
Удаление обработчка

Например, при зажатой ЛК мыши элемент тащится, а при отпускании перестает 
реагировать на мышь drug-and-drop
  
