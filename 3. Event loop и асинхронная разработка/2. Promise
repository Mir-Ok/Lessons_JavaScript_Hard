Подробнее https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Promise

На данный момент мы знаем два типа асинхронности: setTimeout, setInterval и async/await

Задание: создаем скрипт, который подгружает css стили в момент загрузки модального окна
Для отработки создадим несколько файлов.

1. html-страница (promise.html)

<!DOCTYPE html>
<html lang="ru">
    <head>
        <title>Modal</title>
        <meta charset="UTF-8">
        <meta name="viewport" 
                content="width=device-width, initial-scale=1">
        <script defer src="./promise.js"></script>
    </head>
    <!-- На момент загрузки страницы стилей нет, только кнопка 
    Загрузка их начнется при открытии модального окна -->
    <body>
        <button id="open-modal-button"></button>
    </body>
</html>
 
2. css-файл стилей (promise.css)

// фон модального окна, полупрозрачный черный поверх всего
.modal-root {
    background: rgba(0,0,0,0.5);
    position: fixed;
    top:0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 100;
}

// внешний вид самого окна
.modal-win {
    background: white;
    max-width: 360px;
    padding: 20px;
    margin: 10vh auto;
}

3. скрипт (promise.js) 

// предусмотрим загрузку стилей несколько раз
let cssLoaded = false

// создадим функцию загрузки css 
function loadModalCss() {
    // проверяем нет ли уже загруженных стилей
    if (cssLoaded) return;

    // создадим ссылку
    const link = document.createElement('link');
    // заполним ее атрибуты
    link.rel = 'stylesheet';
    link.href = './promise.css';
    // поместим в head 
    document.head.append(link)
    cssLoaded = true
}

// функция открытия модалки
function askConfirmation(text = 'Вы уверены?') {
    // загружаем стили
    loadModalCss();

    // создадим элементы модалки
    const root = document.createElement('div');
    const win = document.createElement('div');
    const paragraph = document.createElement('p');
    const btnYes = document.createElement('button');
    const btnNo = document.createElement('button');

    // добавим соотв. классы
    root.classList.add('modal-root');
    win.classList.add('modal-win');

    // вложим элементы друг в друга
    
    root.append(win);
    win.append(paragraph);
    win.append(btnYes);
    win.append(btnNo);
    
    // заполним элементы
    paragraph.textContent = text;
    btnYes.textContent = 'Да'
    btnNo.textContent = 'Нет'

    document.body.append(root);
}

// повесим на клик кнопки обработчик события
document.getElementById("open-modal-button").addEventListener('click', () => {    
    askConfirmation();
})
 
 
------------------------------------------

Перепишем код с Promise

// предусмотрим загрузку стилей несоклько раз
let cssPromise = null

// создадим функцию загрузки css 
function loadModalCss() {
    // проверяем еcть ли уже разрешенный ранее promise
    if (cssPromise) return cssPromise;
    // вводим асинхронность, передаем аргумент
    cssPromise =  new Promise(resolve => {
        // создадим ссылку и заполним ее атрибуты
        const link = document.createElement('link');
        link.rel = 'stylesheet';
        link.href = './promise.css';
        // когда resolve выполнится, Promise считается разрешенным
        link.addEventListener('load', () => {
            resolve();
        });
        // поместим в head 
        document.head.append(link)
        cssLoaded = true
    })
    return cssPromise

}

// функция открытия модалки
// вводим асинхронность
async function askConfirmation(text = 'Вы уверены?') {
    // получаем объект Promise
    await loadModalCss();
    
    return new Promise(resolve => {
        // создадим элементы модалки
        const root = document.createElement('div');
        const win = document.createElement('div');
        const paragraph = document.createElement('p');
        const btnYes = document.createElement('button');
        const btnNo = document.createElement('button');

        // добавим соотв. классы
        root.classList.add('modal-root');
        win.classList.add('modal-win');

        // вложим элементы друг в друга
        
        root.append(win);
        win.append(paragraph);
        win.append(btnYes);
        win.append(btnNo);
        
        // заполним элементы
        paragraph.textContent = text;
        btnYes.textContent = 'Да'
        btnNo.textContent = 'Нет'

        btnYes.addEventListener('click', () => {
            resolve(true);
            root.remove()
        })

        btnNo.addEventListener('click', () => {
            // передаем значение, которое возвращается по щелчку на кнопку
            resolve(false);
            root.remove()
        })

        document.body.append(root);
    });

}

// повесим на клик кнопки обработчик события
document.getElementById('open').addEventListener('click', async () => {   
    const confirmed = await askConfirmation();
    console.log(confirmed)
})
