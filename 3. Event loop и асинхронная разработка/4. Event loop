Яваскрипт - однопоточный, использует одно ядро процесора
Java, Go могут использовать несколько ядер

Асинхронные операции осуществляются только тогда, когда ядро бездействует

(async () => {
  const result = await fetch('/app/$users');
  const json = await result.json();
  console.log(json);
})();

Яваскрипт разделить код на две части: то, что выполнится здесь и сейчас (await, отправка
запроса) и потом (когда сервер начнет отправлять ответ).
Между этими операциями он бездействует.
Когда сервер начинает отправлять ответ, Яваскрипт получает сигнал работать дальше и
вызывает функцию, которая дожидается получения всего тела ответа.
Пока ждет, снова засыпает.
Когда ответ получен, он просыпается и начинает синхронно получать json
остаток функции выполнится сразу после получения объекта.
Как только выведет в консоль, то снова заснет
Но так как время ожидание очень маленькое, это незаметно

Цикл событий - это последовательность операций, не путаем с событиями браузера.

Event loop - как техподдержка, пока звонков нет, 

