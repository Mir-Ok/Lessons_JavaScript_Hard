В синхронном коде ошибка вызывает немедленное завершение программы
Как обстоят дела с асинхронными вызовами?

(async () => {
  // Макро 2.1. присвоение  Макро 1.1 отправка запроса
  const res = await retch('http://facebook.com');
  // Макро 3.1. присвоение  Макро 2.2 парсинг ответа
  const data = await res.json();
})();

// Макро 1.2
console.log('Пытаемся получить главную страницу')

В норме код породит 3 макрозадачи:

1. Отправка запроса на сайт и вывод в консоль синхронно
2. Получаем ответ и начинаем его парсить
3. Получение результата парсинга

Какие могут быть ошибки?

1. Выполнится по-любому, потому что отправка запроса даже на другой адрес и вывод
  в консоль инициируются
2. Если ответ придет с ошибкой, то вторая макрозадача даже не запланируется  

------------------------------------------

Как обработать ошибки?
Аналогично при помощи try/catch, но он работает только с await
Это вызовет не ошибку, а выдаст сообщение в консоль

Вставим обработчик:

(async () => {
  try {
    const res = await fetch('http://facebook.com');
    console.log('После получения кода на Facebook');
    const data = await res.json();
    console.log('После получения тела ответа')
  } catch (error) {
    console.log('Не удалось получить тело ответа')
  }
})();
console.log('Пытаемся получить главную страницу')

Перепишем код с промисами:

fetch('http://facebook.com')
  .then(res => {
    console.log('После получения кода на Facebook');
    return res.json() // вернем то, что пойдет в следующий вызов, в переменную data
  })
  .then(data => {
    console.log('После получения тела ответа')
  })
  .catch(error => {  // обрабатываем ошибку на любом из этапов 
    console.log('Не удалось получить тело ответа')
  });
console.log('Пытаемся получить главную страницу')  
